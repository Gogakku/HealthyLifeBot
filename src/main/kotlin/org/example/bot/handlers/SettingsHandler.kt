package org.example.bot.handlers

import org.example.org.example.HealthyLifeBot
import org.example.org.example.UserState
import org.telegram.telegrambots.meta.api.methods.send.SendMessage
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardButton
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow

class SettingsHandler(private val bot: HealthyLifeBot) {
    fun handle(chatId: Long) {
        val profile = bot.getUserProfile(chatId)
        if (profile == null) {
            bot.execute(SendMessage(chatId.toString(), "–°–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å!"))
            return
        }

        val message = """
            ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:
            
            üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:
            –ò–º—è: ${profile.name}
            –í–æ–∑—Ä–∞—Å—Ç: ${profile.age}
            –†–æ—Å—Ç: ${profile.height} —Å–º
            –í–µ—Å: ${profile.weight} –∫–≥
            –¶–µ–ª—å: ${profile.goal}
            
            –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:
        """.trimIndent()

        val response = SendMessage(chatId.toString(), message)
        response.replyMarkup = createSettingsMenu()
        bot.execute(response)
    }

    fun handleSettingChange(chatId: Long, setting: String) {
        val message = when (setting) {
            "–ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç" -> {
                bot.setUserState(chatId, UserState.SETTINGS_AGE)
                "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –≤–æ–∑—Ä–∞—Å—Ç (–æ—Ç 10 –¥–æ 100 –ª–µ—Ç):"
            }
            "–ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ—Å—Ç" -> {
                bot.setUserState(chatId, UserState.SETTINGS_HEIGHT)
                "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ä–æ—Å—Ç –≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö (–æ—Ç 100 –¥–æ 250 —Å–º):"
            }
            "–ò–∑–º–µ–Ω–∏—Ç—å –≤–µ—Å" -> {
                bot.setUserState(chatId, UserState.SETTINGS_WEIGHT)
                "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –≤–µ—Å –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö (–æ—Ç 30 –¥–æ 300 –∫–≥):"
            }
            "–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–ª—å" -> {
                bot.setUserState(chatId, UserState.SETTINGS_GOAL)
                """
                    –í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–ª—å:
                    1. –ü–æ—Ö—É–¥–µ—Ç—å
                    2. –ù–∞–±—Ä–∞—Ç—å –º—ã—à–µ—á–Ω—É—é –º–∞—Å—Å—É
                    3. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ñ–æ—Ä–º—É
                """.trimIndent()
            }
            else -> {
                bot.setUserState(chatId, UserState.COMPLETED)
                "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞"
            }
        }

        val response = SendMessage(chatId.toString(), message)
        if (setting == "–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–ª—å") {
            response.replyMarkup = createGoalMenu()
        }
        bot.execute(response)
    }

    private fun createSettingsMenu(): ReplyKeyboardMarkup {
        val keyboard = ReplyKeyboardMarkup()
        keyboard.resizeKeyboard = true
        keyboard.keyboard = listOf(
            KeyboardRow().apply {
                add(KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç"))
                add(KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ—Å—Ç"))
            },
            KeyboardRow().apply {
                add(KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –≤–µ—Å"))
                add(KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–ª—å"))
            },
            KeyboardRow().apply {
                add(KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"))
            }
        )
        return keyboard
    }

    private fun createGoalMenu(): ReplyKeyboardMarkup {
        val keyboard = ReplyKeyboardMarkup()
        keyboard.resizeKeyboard = true
        keyboard.keyboard = listOf(
            KeyboardRow().apply {
                add(KeyboardButton("1. –ü–æ—Ö—É–¥–µ—Ç—å"))
            },
            KeyboardRow().apply {
                add(KeyboardButton("2. –ù–∞–±—Ä–∞—Ç—å –º—ã—à–µ—á–Ω—É—é –º–∞—Å—Å—É"))
            },
            KeyboardRow().apply {
                add(KeyboardButton("3. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ñ–æ—Ä–º—É"))
            },
            KeyboardRow().apply {
                add(KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"))
            }
        )
        return keyboard
    }
}
